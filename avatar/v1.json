{
  "definitions": {
    "Roblox.Api.Avatar.Controllers.V1.AvatarController.EmptyResponse": {
      "description": "Empty response, will be in WebAPI base soon",
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.AssetIdListModel": {
      "description": "A model that contains a list of asset ids",
      "properties": {
        "assetIds": {
          "description": "The asset ids",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.AssetMetaModelV1": {
      "description": "Exhaustive model denoting all possible metadata fields of an asset",
      "properties": {
        "order": {
          "description": "Layered-clothing order",
          "format": "int32",
          "type": "integer"
        },
        "position": {
          "$ref": "#/definitions/Roblox.Avatarcore.Shared.V3Beta1.AssetPosition"
        },
        "puffiness": {
          "description": "Layered-clothing puffiness",
          "format": "float",
          "type": "number"
        },
        "rotation": {
          "$ref": "#/definitions/Roblox.Avatarcore.Shared.V3Beta1.AssetRotation"
        },
        "scale": {
          "$ref": "#/definitions/Roblox.Avatarcore.Shared.V3Beta1.AssetScale"
        },
        "version": {
          "description": "Client-authoritative meta model format version\r\n- default is always 1",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.AssetModelV2": {
      "description": "A model containing details about an asset\r\n- V2: adds CurrentVersionId, AssetMetaModel",
      "properties": {
        "assetType": {
          "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetTypeModel"
        },
        "currentVersionId": {
          "description": "Id of the current version of asset",
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "description": "The id",
          "format": "int64",
          "type": "integer"
        },
        "meta": {
          "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetMetaModelV1"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.AssetTypeModel": {
      "description": "A model containing details about an asset type",
      "properties": {
        "id": {
          "description": "The id",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.AssetTypeRulesModel": {
      "description": "A model containing details about an asset type and its business rules",
      "properties": {
        "id": {
          "description": "The id",
          "format": "int64",
          "type": "integer"
        },
        "maxNumber": {
          "description": "The max number of this asset type that can be worn",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.AvatarApiSuccessResponse": {
      "description": "Success response class",
      "properties": {
        "success": {
          "description": "Gets or sets a value indicating whether the request was a success.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.AvatarFilteredPageResponse[Roblox.Api.Avatar.Models.OutfitModel]": {
      "description": "Filtered page response",
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.OutfitModel"
          },
          "type": "array"
        },
        "filteredCount": {
          "description": "Number of !:TPagedObject filtered.",
          "format": "int32",
          "type": "integer"
        },
        "total": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.AvatarMetadataModel": {
      "description": "A model containing website metadata for avatars",
      "properties": {
        "LCEnabledInEditorAndCatalog": {
          "description": "Flag for both web UI and App, name is fixed due to sharing, do not change",
          "type": "boolean"
        },
        "areThreeDeeThumbsEnabled": {
          "description": "Whether or not 3D thumbnails are shown",
          "type": "boolean"
        },
        "enableDefaultClothingMessage": {
          "description": "Whether or not to show the Default Clothing message",
          "type": "boolean"
        },
        "isAvatarScaleEmbeddedInTab": {
          "description": "Whether or not the Scales is embedded in the tab",
          "type": "boolean"
        },
        "isAvatarWearingApiCallsLockingOnFrontendEnabled": {
          "description": "Does the frontend lock avatar editor input until the wearing call returns",
          "type": "boolean"
        },
        "isBodyTypeScaleOutOfTab": {
          "description": "Whether or not the Boby Type scale is embedded in the tab",
          "type": "boolean"
        },
        "isCategoryReorgEnabled": {
          "description": "Determines whether Category Reorg is released",
          "type": "boolean"
        },
        "isJustinUiChangesEnabled": {
          "description": "Determines whether a bunch of UI improvements are released",
          "type": "boolean"
        },
        "isLCCompletelyEnabled": {
          "description": "Useful for the time between enabling Jackets for most users and\r\nall LC types for everyone, meanwhile Soothsayers need all types\r\nat all times",
          "type": "boolean"
        },
        "isOutfitHandlingOnFrontendEnabled": {
          "description": "Does the frontend lock avatar editor input until the wearing call returns",
          "type": "boolean"
        },
        "scaleBodyTypeIncrement": {
          "description": "How much the body type scaler should increment by",
          "format": "double",
          "type": "number"
        },
        "scaleHeadIncrement": {
          "description": "How much the head scaler should increment by",
          "format": "double",
          "type": "number"
        },
        "scaleHeightIncrement": {
          "description": "How much the height scaler should increment by",
          "format": "double",
          "type": "number"
        },
        "scaleProportionIncrement": {
          "description": "How much the proportion scaler should increment by",
          "format": "double",
          "type": "number"
        },
        "scaleWidthIncrement": {
          "description": "How much the width scaler should increment by",
          "format": "double",
          "type": "number"
        },
        "showDefaultClothingMessageOnPageLoad": {
          "description": "Whether or not to show the default clothing message when the page loads",
          "type": "boolean"
        },
        "supportProportionAndBodyType": {
          "description": "Whether or not to support proportion and body type",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.AvatarModelV2": {
      "description": "A model containing details about an avatar",
      "properties": {
        "assets": {
          "description": "The assets worn on the character",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetModelV2"
          },
          "type": "array"
        },
        "bodyColors": {
          "$ref": "#/definitions/Roblox.Api.Avatar.Models.BodyColorsModel"
        },
        "defaultPantsApplied": {
          "description": "Whether default clothing has been applied to this avatar.",
          "type": "boolean"
        },
        "defaultShirtApplied": {
          "description": "Whether default clothing has been applied to this avatar.",
          "type": "boolean"
        },
        "emotes": {
          "description": "The emotes on the character",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.EmoteResponseModel"
          },
          "type": "array"
        },
        "playerAvatarType": {
          "description": "The avatar type ['R6' = 1, 'R15' = 3]",
          "enum": [
            1,
            3
          ],
          "format": "int32",
          "type": "integer"
        },
        "scales": {
          "$ref": "#/definitions/Roblox.Web.Responses.Avatar.ScaleModel"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.AvatarRulesModel": {
      "description": "A model containing details about avatar-related business rules",
      "properties": {
        "accessoryRefinementLowerBounds": {
          "description": "The lower bounds for accessory refinement settings.",
          "properties": {
            "AdsVideo": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Animation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "App": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Arms": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Audio": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Avatar": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "BackAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Badge": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "ClimbAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Code": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "CodeSnippet": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "DeathAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Decal": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "DressSkirtAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "DynamicHead": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "EmoteAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "EyebrowAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "EyelashAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Face": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "FaceAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "FallAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "FontFace": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "FontFamily": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "FrontAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "GamePass": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Gear": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "GroupEmblem": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "HTML": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "HairAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Hat": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Head": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "IdleAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Image": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "JacketAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "JumpAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "LeftArm": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "LeftLeg": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "LeftShoeAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Legs": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "LocalizationTableManifest": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "LocalizationTableTranslation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Lua": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Mesh": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "MeshHiddenSurfaceRemoval": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "MeshPart": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Model": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "MoodAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "NeckAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "OtaUpdate": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Package": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Pants": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "PantsAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Place": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Plugin": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "PoseAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "RightArm": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "RightLeg": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "RightShoeAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "RunAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Shirt": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "ShirtAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "ShortsAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "ShoulderAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "SolidModel": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "SweaterAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "SwimAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "TShirt": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "TShirtAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Text": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "TexturePack": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Torso": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Video": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "WaistAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "WalkAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "YouTubeVideo": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            }
          },
          "type": "object"
        },
        "accessoryRefinementTypes": {
          "description": "The list of asset types for Accessory Refinement.",
          "items": {
            "description": " ['Image' = 1, 'TShirt' = 2, 'Audio' = 3, 'Mesh' = 4, 'Lua' = 5, 'HTML' = 6, 'Text' = 7, 'Hat' = 8, 'Place' = 9, 'Model' = 10, 'Shirt' = 11, 'Pants' = 12, 'Decal' = 13, 'Avatar' = 16, 'Head' = 17, 'Face' = 18, 'Gear' = 19, 'Badge' = 21, 'GroupEmblem' = 22, 'Animation' = 24, 'Arms' = 25, 'Legs' = 26, 'Torso' = 27, 'RightArm' = 28, 'LeftArm' = 29, 'LeftLeg' = 30, 'RightLeg' = 31, 'Package' = 32, 'YouTubeVideo' = 33, 'GamePass' = 34, 'App' = 35, 'Code' = 37, 'Plugin' = 38, 'SolidModel' = 39, 'MeshPart' = 40, 'HairAccessory' = 41, 'FaceAccessory' = 42, 'NeckAccessory' = 43, 'ShoulderAccessory' = 44, 'FrontAccessory' = 45, 'BackAccessory' = 46, 'WaistAccessory' = 47, 'ClimbAnimation' = 48, 'DeathAnimation' = 49, 'FallAnimation' = 50, 'IdleAnimation' = 51, 'JumpAnimation' = 52, 'RunAnimation' = 53, 'SwimAnimation' = 54, 'WalkAnimation' = 55, 'PoseAnimation' = 56, 'LocalizationTableManifest' = 59, 'LocalizationTableTranslation' = 60, 'EmoteAnimation' = 61, 'Video' = 62, 'TexturePack' = 63, 'TShirtAccessory' = 64, 'ShirtAccessory' = 65, 'PantsAccessory' = 66, 'JacketAccessory' = 67, 'SweaterAccessory' = 68, 'ShortsAccessory' = 69, 'LeftShoeAccessory' = 70, 'RightShoeAccessory' = 71, 'DressSkirtAccessory' = 72, 'FontFamily' = 73, 'FontFace' = 74, 'MeshHiddenSurfaceRemoval' = 75, 'EyebrowAccessory' = 76, 'EyelashAccessory' = 77, 'MoodAnimation' = 78, 'DynamicHead' = 79, 'CodeSnippet' = 80, 'AdsVideo' = 81, 'OtaUpdate' = 82]",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              16,
              17,
              18,
              19,
              21,
              22,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82
            ],
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": true
        },
        "accessoryRefinementUpperBounds": {
          "description": "The lower bounds for accessory refinement settings.",
          "properties": {
            "AdsVideo": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Animation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "App": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Arms": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Audio": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Avatar": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "BackAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Badge": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "ClimbAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Code": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "CodeSnippet": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "DeathAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Decal": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "DressSkirtAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "DynamicHead": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "EmoteAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "EyebrowAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "EyelashAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Face": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "FaceAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "FallAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "FontFace": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "FontFamily": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "FrontAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "GamePass": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Gear": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "GroupEmblem": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "HTML": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "HairAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Hat": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Head": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "IdleAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Image": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "JacketAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "JumpAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "LeftArm": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "LeftLeg": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "LeftShoeAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Legs": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "LocalizationTableManifest": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "LocalizationTableTranslation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Lua": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Mesh": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "MeshHiddenSurfaceRemoval": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "MeshPart": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Model": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "MoodAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "NeckAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "OtaUpdate": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Package": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Pants": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "PantsAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Place": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Plugin": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "PoseAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "RightArm": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "RightLeg": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "RightShoeAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "RunAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Shirt": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "ShirtAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "ShortsAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "ShoulderAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "SolidModel": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "SweaterAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "SwimAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "TShirt": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "TShirtAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Text": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "TexturePack": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Torso": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "Video": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "WaistAccessory": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "WalkAnimation": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            },
            "YouTubeVideo": {
              "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRefinementModel"
            }
          },
          "type": "object"
        },
        "basicBodyColorsPalette": {
          "description": "The basic set of body colors",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.BodyColorModel"
          },
          "type": "array"
        },
        "bodyColorsPalette": {
          "description": "The full set of usable body colors",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.BodyColorModel"
          },
          "type": "array"
        },
        "bundlesEnabledForUser": {
          "description": "Whether or not bundles are enabled for the specific user",
          "type": "boolean"
        },
        "defaultClothingAssetLists": {
          "$ref": "#/definitions/Roblox.Api.Avatar.Models.DefaultClothingAssets"
        },
        "emotesEnabledForUser": {
          "description": "Whether or not emotes are enabled",
          "type": "boolean"
        },
        "minimumDeltaEBodyColorDifference": {
          "description": "The minimum Delta-E difference in body colors\r\nfor default clothing not to be applied",
          "format": "double",
          "type": "number"
        },
        "playerAvatarTypes": {
          "description": "The avatar type",
          "items": {
            "description": "https://confluence.roblox.com/display/PLATFORM/Avatar+Project+2016\r\nWhat avatar type does the player prefer to have? ['R6' = 1, 'R15' = 3]",
            "enum": [
              1,
              3
            ],
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "proportionsAndBodyTypeEnabledForUser": {
          "description": "Whether proportion and bodyType scales are allowed to be set by the authenticated user",
          "type": "boolean"
        },
        "scales": {
          "additionalProperties": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.ScaleRulesModel"
          },
          "description": "The scales",
          "type": "object"
        },
        "wearableAssetTypes": {
          "description": "The assets worn on the character",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetTypeRulesModel"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.BodyColorModel": {
      "description": "A model container BrickColor ids for each body part.",
      "properties": {
        "brickColorId": {
          "description": "The BrickColor id",
          "format": "int32",
          "type": "integer"
        },
        "hexColor": {
          "description": "The hex color, e.g. #FFFFFF",
          "type": "string"
        },
        "name": {
          "description": "The name of the BrickColor",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.BodyColorsModel": {
      "description": "A model container BrickColor ids for each body part.",
      "properties": {
        "headColorId": {
          "description": "The BrickColor id for head color",
          "format": "int32",
          "type": "integer"
        },
        "leftArmColorId": {
          "description": "The BrickColor id for left arm color",
          "format": "int32",
          "type": "integer"
        },
        "leftLegColorId": {
          "description": "The BrickColor id for left leg color",
          "format": "int32",
          "type": "integer"
        },
        "rightArmColorId": {
          "description": "The BrickColor id for right arm color",
          "format": "int32",
          "type": "integer"
        },
        "rightLegColorId": {
          "description": "The BrickColor id for right leg color",
          "format": "int32",
          "type": "integer"
        },
        "torsoColorId": {
          "description": "The BrickColor id for torso color",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.DefaultClothingAssets": {
      "description": "A model containing details about avatar-related business rules",
      "properties": {
        "defaultPantAssetIds": {
          "description": "List of asset Ids used to equip pants for default clothing when the avatar appears nude.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        },
        "defaultShirtAssetIds": {
          "description": "List of asset Ids used to equip shirts for default clothing when the avatar appears nude.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.EmoteResponseModel": {
      "description": "Response object representing a user's emote",
      "properties": {
        "assetId": {
          "description": "The asset id of the emote",
          "format": "int64",
          "type": "integer"
        },
        "assetName": {
          "description": "The name of the emote",
          "type": "string"
        },
        "position": {
          "description": "The position the emote is equipped to",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.GameStartInfoResponse": {
      "description": "The game start info",
      "properties": {
        "allowCustomAnimations": {
          "description": "Custom animation enabled",
          "type": "string"
        },
        "gameAvatarType": {
          "description": "Avatar Type",
          "type": "string"
        },
        "jointPositioningType": {
          "description": "Joing positioning type",
          "type": "string"
        },
        "message": {
          "description": "Mesasge",
          "type": "string"
        },
        "moderationStatus": {
          "description": "Moderation status",
          "type": "string"
        },
        "universeAvatarAssetOverrides": {
          "description": "asset overrides for the univers",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.UniverseAvatarAssetOverrideResponseModel"
          },
          "type": "array"
        },
        "universeAvatarBodyType": {
          "description": "Body type for the univers",
          "type": "string"
        },
        "universeAvatarCollisionType": {
          "description": "collision type for the univers",
          "type": "string"
        },
        "universeAvatarMaxScales": {
          "$ref": "#/definitions/Roblox.Web.Responses.Avatar.ScaleModel"
        },
        "universeAvatarMinScales": {
          "$ref": "#/definitions/Roblox.Web.Responses.Avatar.ScaleModel"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.OutfitDetailsModel": {
      "description": "A model containing details about a user outfit",
      "properties": {
        "assets": {
          "description": "A list of assetIds",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetModelV2"
          },
          "type": "array"
        },
        "bodyColors": {
          "$ref": "#/definitions/Roblox.Api.Avatar.Models.BodyColorsModel"
        },
        "id": {
          "description": "The id",
          "format": "int64",
          "type": "integer"
        },
        "isEditable": {
          "description": "Whether the outfit can be edited by the user",
          "type": "boolean"
        },
        "moderationStatus": {
          "description": "The moderation status of the outfit, not applicable when outfit is created outside experience",
          "type": "string"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "outfitType": {
          "description": "The outfit type of the outfit",
          "type": "string"
        },
        "playerAvatarType": {
          "description": "The player avatar type - this can be R6 or R15.",
          "type": "string"
        },
        "scale": {
          "$ref": "#/definitions/Roblox.Web.Responses.Avatar.ScaleModel"
        },
        "universeId": {
          "description": "The universe id of the outfit, null when outfit is not created in-experience",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.OutfitModel": {
      "description": "A slim model for user outfits",
      "properties": {
        "id": {
          "description": "The id",
          "format": "int64",
          "type": "integer"
        },
        "isEditable": {
          "description": "Whether the outfit can be modified by the user",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.OutfitUpdateModelV1": {
      "description": "A model containing details needed to update or create an outfit",
      "properties": {
        "assetIds": {
          "description": "The outfit asset IDs",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        },
        "bodyColors": {
          "$ref": "#/definitions/Roblox.Api.Avatar.Models.BodyColorsModel"
        },
        "name": {
          "description": "The outfit name",
          "type": "string"
        },
        "outfitType": {
          "description": "The type of outfit ['Invalid' = 0, 'Avatar' = 1, 'DynamicHead' = 2, 'InExperienceBody' = 3]",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "format": "int32",
          "type": "integer"
        },
        "playerAvatarType": {
          "description": "The avatar scale",
          "type": "string"
        },
        "scale": {
          "$ref": "#/definitions/Roblox.Web.Responses.Avatar.ScaleModel"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.PlayerAvatarTypeModel": {
      "description": "A model that contains a playerAvatarType",
      "properties": {
        "playerAvatarType": {
          "description": "The playerAvatarType ['R6' = 1, 'R15' = 3]",
          "enum": [
            1,
            3
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.RecentItemModel": {
      "description": "A model containing details about a recent item",
      "properties": {
        "assetType": {
          "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetTypeModel"
        },
        "id": {
          "description": "The id. Check the type to figure out what kind of recent item this is.",
          "format": "int64",
          "type": "integer"
        },
        "isEditable": {
          "description": "The outfit's editability (only included if it is an outfit)",
          "type": "boolean"
        },
        "name": {
          "description": "The name",
          "type": "string"
        },
        "type": {
          "description": "The recent item's type. Can be Asset or Outfit ['Asset' = 1, 'Outfit' = 2]",
          "enum": [
            1,
            2
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.ScaleRulesModel": {
      "description": "A model that contains information about the max/mins for each scale",
      "properties": {
        "increment": {
          "description": "The increment of the scale",
          "format": "double",
          "type": "number"
        },
        "max": {
          "description": "The max scale",
          "format": "double",
          "type": "number"
        },
        "min": {
          "description": "The min scale",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.UniverseAvatarAssetOverrideResponseModel": {
      "properties": {
        "assetID": {
          "format": "int64",
          "type": "integer"
        },
        "assetTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "isPlayerChoice": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Roblox.Api.Avatar.Models.WearResponseModel": {
      "description": "A model for wear outfit responses",
      "properties": {
        "invalidAssetIds": {
          "description": "The asset ids that could not be worn",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        },
        "invalidAssets": {
          "description": "The assets that could not be worn\r\nUnlike invalidAssetIds, only contains assets that are wearable types",
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetModelV2"
          },
          "type": "array"
        },
        "success": {
          "description": "Whether or not all the outfit contents were successfully worn",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Roblox.Avatarcore.Common.Models.AccessoryPositionModel": {
      "properties": {
        "xPosition": {
          "format": "float",
          "type": "number"
        },
        "yPosition": {
          "format": "float",
          "type": "number"
        },
        "zPosition": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Roblox.Avatarcore.Common.Models.AccessoryRefinementModel": {
      "properties": {
        "position": {
          "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryPositionModel"
        },
        "rotation": {
          "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryRotationModel"
        },
        "scale": {
          "$ref": "#/definitions/Roblox.Avatarcore.Common.Models.AccessoryScaleModel"
        }
      },
      "type": "object"
    },
    "Roblox.Avatarcore.Common.Models.AccessoryRotationModel": {
      "properties": {
        "xRotation": {
          "format": "float",
          "type": "number"
        },
        "yRotation": {
          "format": "float",
          "type": "number"
        },
        "zRotation": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Roblox.Avatarcore.Common.Models.AccessoryScaleModel": {
      "properties": {
        "xScale": {
          "format": "float",
          "type": "number"
        },
        "yScale": {
          "format": "float",
          "type": "number"
        },
        "zScale": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Roblox.Avatarcore.Shared.V3Beta1.AssetPosition": {
      "properties": {
        "X": {
          "format": "float",
          "type": "number"
        },
        "Y": {
          "format": "float",
          "type": "number"
        },
        "Z": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Roblox.Avatarcore.Shared.V3Beta1.AssetRotation": {
      "properties": {
        "X": {
          "format": "float",
          "type": "number"
        },
        "Y": {
          "format": "float",
          "type": "number"
        },
        "Z": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Roblox.Avatarcore.Shared.V3Beta1.AssetScale": {
      "properties": {
        "Scale": {
          "format": "float",
          "type": "number"
        },
        "X": {
          "format": "float",
          "type": "number"
        },
        "Y": {
          "format": "float",
          "type": "number"
        },
        "Z": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Roblox.Web.Responses.Avatar.ScaleModel": {
      "properties": {
        "bodyType": {
          "format": "double",
          "type": "number"
        },
        "depth": {
          "format": "double",
          "type": "number"
        },
        "head": {
          "format": "double",
          "type": "number"
        },
        "height": {
          "format": "double",
          "type": "number"
        },
        "proportion": {
          "format": "double",
          "type": "number"
        },
        "width": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Roblox.Web.WebAPI.Models.ApiLegacyPageResponse[Roblox.Api.Avatar.Models.RecentItemModel]": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/Roblox.Api.Avatar.Models.RecentItemModel"
          },
          "type": "array"
        },
        "total": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "host": "avatar.roblox.com",
  "info": {
    "title": "Avatar Api v1",
    "version": "v1"
  },
  "paths": {
    "/v1/avatar": {
      "get": {
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:GetMyAvatarModel"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarModelV2"
            }
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          }
        },
        "summary": "Returns details about the authenticated user's avatar",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/avatar-rules": {
      "get": {
        "description": "BodyColorsPalette is a list of valid brickColors you can choose for your avatar.\r\nWearableAssetTypes contains a list of asset types with names, ids, and the maximum number that you can wear at a time.\r\nDoes not include packages because they cannot be worn on your avatar directly.\r\nPlayerAvatarTypes are the types of avatars you can choose between.",
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:GetAvatarRulesModel"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarRulesModel"
            }
          }
        },
        "summary": "Returns the business rules related to avatars",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/avatar/assets/{assetId}/remove": {
      "post": {
        "parameters": [
          {
            "description": "The asset id.",
            "format": "int64",
            "in": "path",
            "name": "assetId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:RemoveAsset"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarApiSuccessResponse"
            }
          },
          "400": {
            "description": "2: Failed to remove asset."
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n1: You must be wearing the asset to remove it."
          }
        },
        "summary": "Removes the asset from the authenticated user's avatar.",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/avatar/assets/{assetId}/wear": {
      "post": {
        "parameters": [
          {
            "description": "The asset id.",
            "format": "int64",
            "in": "path",
            "name": "assetId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:WearAsset"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarApiSuccessResponse"
            }
          },
          "400": {
            "description": "2: Failed to wear asset."
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n1: You must own an asset to wear it."
          }
        },
        "summary": "Puts the asset on the authenticated user's avatar.\r\n- Flagged as obsolete, does not support layered clothing meta params",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/avatar/metadata": {
      "get": {
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:GetAvatarMetaData"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarMetadataModel"
            }
          }
        },
        "summary": "Returns metadata used by the avatar page of the website",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/avatar/redraw-thumbnail": {
      "post": {
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:RedrawThumbnail"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Controllers.V1.AvatarController.EmptyResponse"
            }
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed"
          },
          "429": {
            "description": "1: Redrawing your avatar thumbnail is floodchecked at this time\r\n1: Redrawing your avatar thumbnail is floodchecked at this time"
          }
        },
        "summary": "Requests the authenticated user's thumbnail be redrawn",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/avatar/set-body-colors": {
      "post": {
        "consumes": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "bodyColorsModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.BodyColorsModel"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:SetBodyColors"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarApiSuccessResponse"
            }
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed"
          }
        },
        "summary": "Sets the authenticated user's body colors",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/avatar/set-player-avatar-type": {
      "post": {
        "consumes": [
          "application/json",
          "text/json"
        ],
        "description": "This is the avatar type chosen on the Avatar page. Some games can override this and force your character to be R6 or R15.",
        "parameters": [
          {
            "description": "R6 or R15",
            "in": "body",
            "name": "playerAvatarTypeModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.PlayerAvatarTypeModel"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:SetAvatarType"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarApiSuccessResponse"
            }
          },
          "400": {
            "description": "1: Invalid playerAvatarType. Valid values are: "
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n2: You are not allowed to change player avatar type."
          }
        },
        "summary": "Sets the authenticated user's player avatar type (e.g. R6 or R15).",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/avatar/set-scales": {
      "post": {
        "consumes": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "scalesModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Web.Responses.Avatar.ScaleModel"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:SetScales"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarApiSuccessResponse"
            }
          },
          "400": {
            "description": "1: Please pass in the scales JSON"
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n3: The user does not have permissions to change scales."
          }
        },
        "summary": "Sets the authenticated user's scales",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/avatar/set-wearing-assets": {
      "post": {
        "consumes": [
          "application/json",
          "text/json"
        ],
        "description": "Only allows items that you own, are not expired, and are wearable asset types.\r\nAny assets being worn before this method is called are automatically removed.",
        "parameters": [
          {
            "description": "The list of asset IDs",
            "in": "body",
            "name": "assetIdsModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetIdListModel"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:SetWearingAssets"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.WearResponseModel"
            }
          },
          "400": {
            "description": "3: Invalid assetId"
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed"
          },
          "500": {
            "description": "2: Failed to wear asset."
          }
        },
        "summary": "Sets the avatar's current assets to the list\r\n- Flagged as obsolete, does not support layered clothing meta params",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/game-start-info": {
      "get": {
        "parameters": [
          {
            "description": "",
            "format": "int64",
            "in": "query",
            "name": "universeId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:GetUniverseGameStartInfoEnum"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.GameStartInfoResponse"
            }
          }
        },
        "summary": "The server will call this on game server start to request general information about the universe\r\nThis is version 1.1, which returns an entry from the UniverseAvatarType enum.\r\nDuring mixed mode this may return unreliable results.",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/outfits/create": {
      "post": {
        "consumes": [
          "application/json",
          "text/json"
        ],
        "description": "Fails if any of the assetIds are not owned by the user, or not wearable types.\r\nThe name property of the request is optional as one will be auto-generated when the request has a null name.",
        "parameters": [
          {
            "description": "The new outfit",
            "in": "body",
            "name": "outfitUpdateModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.OutfitUpdateModelV1"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Outfits:CreateOutfit"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarApiSuccessResponse"
            }
          },
          "400": {
            "description": "3: Body colors must be valid BrickColor IDs\r\n4: Invalid outfit name\r\n5: Asset is not wearable by you and was not added to the outfit\r\n7: Invalid Player Avatar Type. Valid types are R6 and R15\r\n8: Invalid assetIds"
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n1: You already have the maximum number of outfits"
          },
          "500": {
            "description": "6: An error occurred while creating the outfit"
          }
        },
        "summary": "Creates a new outfit.",
        "tags": [
          "Outfits"
        ]
      }
    },
    "/v1/outfits/{userOutfitId}": {
      "patch": {
        "consumes": [
          "application/json",
          "text/json"
        ],
        "deprecated": true,
        "description": "Fails if the user does not own any of the assetIds or if they are not wearable asset types. Accepts partial updates.",
        "parameters": [
          {
            "description": "The user outfit id.",
            "format": "int64",
            "in": "path",
            "name": "userOutfitId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The updated outfit",
            "in": "body",
            "name": "outfitUpdateModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.OutfitUpdateModelV1"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Outfits:UpdateOutfitPatch"
          ],
          "obsoleteMessage": "Use v2/outfits/{userOutfitId}"
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.OutfitModel"
            }
          },
          "400": {
            "description": "1: The specified userOutfit does not exist!\r\n1: Must provide both assetIds and bodyColors in to update outfit contents.\r\n3: Body colors must be valid BrickColor IDs\r\n4: Invalid outfit name\r\n5: Asset is not wearable by you\r\n8: Invalid Player Avatar Type. Valid types are R6 and R15"
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n2: You don't have permission to update this outfit."
          },
          "500": {
            "description": "6: An error occurred while trying to update the outfit"
          }
        },
        "summary": "Updates the contents of an outfit. Deprecated. There are no calls to this API",
        "tags": [
          "Outfits"
        ]
      }
    },
    "/v1/outfits/{userOutfitId}/delete": {
      "post": {
        "description": "You are only allowed to delete outfits you created.",
        "parameters": [
          {
            "description": "The user outfit id",
            "format": "int64",
            "in": "path",
            "name": "userOutfitId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Outfits:DeleteOutfit"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarApiSuccessResponse"
            }
          },
          "400": {
            "description": "1: The specified userOutfitId is invalid!"
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n2: You don't have permission to delete this outfit."
          },
          "500": {
            "description": "3: An error occurred while deleting the outfit."
          }
        },
        "summary": "Deletes the outfit",
        "tags": [
          "Outfits"
        ]
      }
    },
    "/v1/outfits/{userOutfitId}/details": {
      "get": {
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "userOutfitId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Outfits:GetOutfitDetailsModel"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.OutfitDetailsModel"
            }
          },
          "400": {
            "description": "1: The specified userOutfitId is invalid.\r\n2: The outfit for the specified userOutfit is invalid."
          },
          "403": {
            "description": "3: The requester does not have access to the details for the given user outfit."
          }
        },
        "tags": [
          "Outfits"
        ]
      }
    },
    "/v1/outfits/{userOutfitId}/update": {
      "post": {
        "consumes": [
          "application/json",
          "text/json"
        ],
        "deprecated": true,
        "description": "Fails if the user does not own any of the assetIds or if they are not wearable asset types.",
        "parameters": [
          {
            "description": "The user outfit id.",
            "format": "int64",
            "in": "path",
            "name": "userOutfitId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The updated outfit",
            "in": "body",
            "name": "outfitUpdateModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.OutfitUpdateModelV1"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Outfits:UpdateOutfit"
          ],
          "obsoleteMessage": "Use v2/outfits/{userOutfitId}/update"
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarApiSuccessResponse"
            }
          },
          "400": {
            "description": "1: The specified userOutfit does not exist!\r\n3: Body colors must be valid BrickColor IDs\r\n4: Invalid outfit name\r\n5: Asset is not wearable by you\r\n7: Invalid assetIds\r\n8: Invalid Player Avatar Type. Valid types are R6 and R15"
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          },
          "403": {
            "description": "0: Token Validation Failed\r\n2: You don't have permission to update this outfit."
          },
          "500": {
            "description": "6: An error occurred while trying to update the outfit"
          }
        },
        "summary": "Updates the contents of the outfit. Deprecated. There are no calls to this API",
        "tags": [
          "Outfits"
        ]
      }
    },
    "/v1/recent-items/{recentItemListType}/list": {
      "get": {
        "parameters": [
          {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "format": "int32",
            "in": "path",
            "name": "recentItemListType",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "RecentItem:GetRecentItems"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiLegacyPageResponse[Roblox.Api.Avatar.Models.RecentItemModel]"
            }
          },
          "401": {
            "description": "0: Authorization has been denied for this request."
          }
        },
        "summary": "Returns a list of recent items\r\nRecent items can be Assets or Outfits",
        "tags": [
          "RecentItem"
        ]
      }
    },
    "/v1/users/{userId}/avatar": {
      "get": {
        "description": "Includes assets, bodycolors, and playerAvatarType.",
        "parameters": [
          {
            "description": "",
            "format": "int64",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:GetAvatarModel"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarModelV2"
            }
          },
          "400": {
            "description": "1: The specified user does not exist.\r\n2: An account for the given userId does not exist!"
          }
        },
        "summary": "Returns details about a specified user's avatar",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/users/{userId}/currently-wearing": {
      "get": {
        "parameters": [
          {
            "description": "The user id.",
            "format": "int64",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:GetUserCurrentlyWearingModel"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AssetIdListModel"
            }
          },
          "400": {
            "description": "1: The specified user does not exist.\r\n2: An account for the given userId does not exist!"
          }
        },
        "summary": "Gets a list of asset ids that the user is currently wearing",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/users/{userId}/outfits": {
      "get": {
        "parameters": [
          {
            "description": "The user id.",
            "format": "int64",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The outfit type being searched for, null will return all outfitTypes",
            "in": "query",
            "name": "outfitType",
            "type": "string"
          },
          {
            "default": 1,
            "description": "The page number of the current page of requests, default is 1.",
            "format": "int32",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 25,
            "description": "The max number of outfits that can be returned.",
            "format": "int32",
            "in": "query",
            "name": "itemsPerPage",
            "type": "integer"
          },
          {
            "description": "Whether the outfits are editable. A null value will lead to no filtering.",
            "in": "query",
            "name": "isEditable",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:GetUserOutfitListModel"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Api.Avatar.Models.AvatarFilteredPageResponse[Roblox.Api.Avatar.Models.OutfitModel]"
            }
          },
          "400": {
            "description": "1: The specified user does not exist.\r\n2: An account for the given userId does not exist!"
          }
        },
        "summary": "Deprecated, user v2.\r\nGets a list of outfits for the specified user.",
        "tags": [
          "Avatar"
        ]
      }
    }
  },
  "schemes": [
    "https"
  ],
  "swagger": "2.0"
}