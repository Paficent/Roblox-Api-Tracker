{
  "definitions": {
    "Roblox.Platform.Core.ExclusiveStartPaging.IExclusiveStartKeyInfo[System.Int32]": {
      "properties": {
        "Count": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "PagingDirection": {
          "description": " ['Forward' = 1, 'Backward' = 2]",
          "enum": [
            1,
            2
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "SortOrder": {
          "description": " ['Asc' = 1, 'Desc' = 2]",
          "enum": [
            1,
            2
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Platform.Core.ExclusiveStartPaging.IExclusiveStartKeyInfo[System.Int64]": {
      "properties": {
        "Count": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "PagingDirection": {
          "description": " ['Forward' = 1, 'Backward' = 2]",
          "enum": [
            1,
            2
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "SortOrder": {
          "description": " ['Asc' = 1, 'Desc' = 2]",
          "enum": [
            1,
            2
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Web.Responses.Games.GameMediaItemResponseV2": {
      "description": "Response model for getting the game media item",
      "properties": {
        "altText": {
          "description": "The media item alt text",
          "type": "string"
        },
        "approved": {
          "description": "The media item is approved or not",
          "type": "boolean"
        },
        "assetType": {
          "description": "The media item type, Image or YouTubeVideo",
          "type": "string"
        },
        "assetTypeId": {
          "description": "The media item type id",
          "format": "int64",
          "type": "integer"
        },
        "imageId": {
          "description": "The media item image id",
          "format": "int64",
          "type": "integer"
        },
        "videoHash": {
          "description": "The media item video hash",
          "type": "string"
        },
        "videoTitle": {
          "description": "The video title for video items.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Roblox.Web.Responses.Games.GameResponseV2": {
      "description": "A response model representing a game.",
      "properties": {
        "created": {
          "description": "When the game was created.",
          "format": "date-time",
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/Roblox.Web.Responses.RelatedEntityTypeResponse[Roblox.Platform.Core.CreatorType]"
        },
        "description": {
          "description": "The game description.",
          "type": "string"
        },
        "id": {
          "description": "The game (universe) Id.",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The game name.",
          "type": "string"
        },
        "placeVisits": {
          "description": "The number of place visits for this game.",
          "format": "int64",
          "type": "integer"
        },
        "rootPlace": {
          "$ref": "#/definitions/Roblox.Web.Responses.RelatedEntityTypeResponse[Roblox.Platform.Assets.AssetType]"
        },
        "updated": {
          "description": "When the game was last updated.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Roblox.Web.Responses.RelatedEntityTypeResponse[Roblox.Platform.Assets.AssetType]": {
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "description": " ['Image' = 1, 'TShirt' = 2, 'Audio' = 3, 'Mesh' = 4, 'Lua' = 5, 'HTML' = 6, 'Text' = 7, 'Hat' = 8, 'Place' = 9, 'Model' = 10, 'Shirt' = 11, 'Pants' = 12, 'Decal' = 13, 'Avatar' = 16, 'Head' = 17, 'Face' = 18, 'Gear' = 19, 'Badge' = 21, 'GroupEmblem' = 22, 'Animation' = 24, 'Arms' = 25, 'Legs' = 26, 'Torso' = 27, 'RightArm' = 28, 'LeftArm' = 29, 'LeftLeg' = 30, 'RightLeg' = 31, 'Package' = 32, 'YouTubeVideo' = 33, 'GamePass' = 34, 'App' = 35, 'Code' = 37, 'Plugin' = 38, 'SolidModel' = 39, 'MeshPart' = 40, 'HairAccessory' = 41, 'FaceAccessory' = 42, 'NeckAccessory' = 43, 'ShoulderAccessory' = 44, 'FrontAccessory' = 45, 'BackAccessory' = 46, 'WaistAccessory' = 47, 'ClimbAnimation' = 48, 'DeathAnimation' = 49, 'FallAnimation' = 50, 'IdleAnimation' = 51, 'JumpAnimation' = 52, 'RunAnimation' = 53, 'SwimAnimation' = 54, 'WalkAnimation' = 55, 'PoseAnimation' = 56, 'LocalizationTableManifest' = 59, 'LocalizationTableTranslation' = 60, 'EmoteAnimation' = 61, 'Video' = 62, 'TexturePack' = 63, 'TShirtAccessory' = 64, 'ShirtAccessory' = 65, 'PantsAccessory' = 66, 'JacketAccessory' = 67, 'SweaterAccessory' = 68, 'ShortsAccessory' = 69, 'LeftShoeAccessory' = 70, 'RightShoeAccessory' = 71, 'DressSkirtAccessory' = 72, 'FontFamily' = 73, 'FontFace' = 74, 'MeshHiddenSurfaceRemoval' = 75, 'EyebrowAccessory' = 76, 'EyelashAccessory' = 77, 'MoodAnimation' = 78, 'DynamicHead' = 79, 'CodeSnippet' = 80, 'AdsVideo' = 81, 'OtaUpdate' = 82]",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            16,
            17,
            18,
            19,
            21,
            22,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Web.Responses.RelatedEntityTypeResponse[Roblox.Platform.Core.CreatorType]": {
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "description": " ['User' = 0, 'Group' = 1]",
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Web.WebAPI.ExclusiveStartRequest[System.Int32]": {
      "properties": {
        "CursorRecipe": {
          "type": "string"
        },
        "ExclusiveStartKeyInfo": {
          "$ref": "#/definitions/Roblox.Platform.Core.ExclusiveStartPaging.IExclusiveStartKeyInfo[System.Int32]"
        }
      },
      "type": "object"
    },
    "Roblox.Web.WebAPI.ExclusiveStartRequest[System.Int64]": {
      "properties": {
        "CursorRecipe": {
          "type": "string"
        },
        "ExclusiveStartKeyInfo": {
          "$ref": "#/definitions/Roblox.Platform.Core.ExclusiveStartPaging.IExclusiveStartKeyInfo[System.Int64]"
        }
      },
      "type": "object"
    },
    "Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Games.GameMediaItemResponseV2]": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/Roblox.Web.Responses.Games.GameMediaItemResponseV2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Web.Responses.Games.GameResponseV2]": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/Roblox.Web.Responses.Games.GameResponseV2"
          },
          "type": "array"
        },
        "nextPageCursor": {
          "type": "string"
        },
        "previousPageCursor": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "host": "games.roblox.com",
  "info": {
    "title": "Games Api v2",
    "version": "v2"
  },
  "paths": {
    "/v2/games/{universeId}/media": {
      "get": {
        "parameters": [
          {
            "description": "The id of the universe we get media data from.",
            "format": "int64",
            "in": "path",
            "name": "universeId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "GamesV2:GetGameMediaData"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Games.GameMediaItemResponseV2]"
            }
          },
          "400": {
            "description": "3: The universe's root place is invalid."
          },
          "404": {
            "description": "2: The requested universe does not exist."
          }
        },
        "summary": "Get the game media data",
        "tags": [
          "GamesV2"
        ]
      }
    },
    "/v2/groups/{groupId}/games": {
      "get": {
        "parameters": [
          {
            "description": "The group Id.",
            "format": "int64",
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "integer"
          },
          {
            "default": 1,
            "description": "Filtering option via access level.",
            "enum": [
              1,
              2,
              4
            ],
            "format": "int32",
            "in": "query",
            "name": "accessFilter",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "The number of results per request.",
            "enum": [
              10,
              25,
              50,
              100
            ],
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "The paging cursor for the previous or next page.",
            "in": "query",
            "name": "cursor",
            "type": "string"
          },
          {
            "default": "Asc",
            "description": "The order the results are sorted in.",
            "enum": [
              "Asc",
              "Desc"
            ],
            "in": "query",
            "name": "sortOrder",
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "GamesV2:GetGroupGames"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Web.Responses.Games.GameResponseV2]"
            }
          },
          "403": {
            "description": "3: Not authorized."
          },
          "500": {
            "description": "0: Compliance Context service is unavailable."
          }
        },
        "summary": "Gets games created by the specified group.",
        "tags": [
          "GamesV2"
        ]
      }
    },
    "/v2/groups/{groupId}/gamesV2": {
      "get": {
        "parameters": [
          {
            "description": "The group Id.",
            "format": "int64",
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "integer"
          },
          {
            "default": 1,
            "description": "Filtering option via access level.",
            "enum": [
              1,
              2,
              4
            ],
            "format": "int32",
            "in": "query",
            "name": "accessFilter",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "The number of results per request.",
            "enum": [
              10,
              25,
              50,
              100
            ],
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "The paging cursor for the previous or next page.",
            "in": "query",
            "name": "cursor",
            "type": "string"
          },
          {
            "default": "Asc",
            "description": "The order the results are sorted in.",
            "enum": [
              "Asc",
              "Desc"
            ],
            "in": "query",
            "name": "sortOrder",
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "GamesV2:GetGroupGamesV2"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Web.Responses.Games.GameResponseV2]"
            }
          },
          "500": {
            "description": "0: Compliance Context service is unavailable."
          },
          "501": {
            "description": "1: Code path is not Implemented."
          }
        },
        "summary": "Gets games created by the specified group. This will replace V1 after validation. Note that this can only used for public/all universes.",
        "tags": [
          "GamesV2"
        ]
      }
    },
    "/v2/users/{userId}/favorite/games": {
      "get": {
        "deprecated": true,
        "parameters": [
          {
            "description": "The user Id.",
            "format": "int64",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "default": 2,
            "description": "Filtering option via access level.",
            "enum": [
              1,
              2,
              4
            ],
            "format": "int32",
            "in": "query",
            "name": "accessFilter",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "The number of results per request.",
            "enum": [
              10,
              25,
              50
            ],
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "The paging cursor for the previous or next page.",
            "in": "query",
            "name": "cursor",
            "type": "string"
          },
          {
            "default": "Asc",
            "description": "The order the results are sorted in.",
            "enum": [
              "Asc",
              "Desc"
            ],
            "in": "query",
            "name": "sortOrder",
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "GamesV2:GetUserFavoriteGames"
          ],
          "obsoleteMessage": "This endpoint will be deprecated on 1/31/2024. As part of soft deprecation we will return empty lists for all users no matter what from now until 1/31/2024. Please use GET www.roblox.com/users/favorites/list-json?assetTypeId=9\u0026userId={userId}\u0026itemsPerPage={number}\u0026pageNumber={pageNumber} as replacement."
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Web.Responses.Games.GameResponseV2]"
            }
          }
        },
        "summary": "Gets users favorite games.",
        "tags": [
          "GamesV2"
        ]
      }
    },
    "/v2/users/{userId}/games": {
      "get": {
        "parameters": [
          {
            "description": "The user Id.",
            "format": "int64",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "default": 2,
            "description": "Filtering option via access level.",
            "enum": [
              1,
              2,
              4
            ],
            "format": "int32",
            "in": "query",
            "name": "accessFilter",
            "type": "integer"
          },
          {
            "default": 10,
            "description": "The number of results per request.",
            "enum": [
              10,
              25,
              50
            ],
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "The paging cursor for the previous or next page.",
            "in": "query",
            "name": "cursor",
            "type": "string"
          },
          {
            "default": "Asc",
            "description": "The order the results are sorted in.",
            "enum": [
              "Asc",
              "Desc"
            ],
            "in": "query",
            "name": "sortOrder",
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "GamesV2:GetUserGames"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiPageResponse[Roblox.Web.Responses.Games.GameResponseV2]"
            }
          }
        },
        "summary": "Gets games created by the specified user.",
        "tags": [
          "GamesV2"
        ]
      }
    }
  },
  "schemes": [
    "https"
  ],
  "swagger": "2.0"
}