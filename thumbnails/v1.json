{
  "definitions": {
    "Roblox.Thumbnails.Api.Models.UniverseThumbnailsResponse": {
      "description": "A response model for thumbnails which belong to a specific universe ID",
      "properties": {
        "error": {
          "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiErrorModel"
        },
        "thumbnails": {
          "description": "An array of ThumbnailResponse objects",
          "items": {
            "$ref": "#/definitions/Roblox.Web.Responses.Thumbnails.ThumbnailResponse"
          },
          "type": "array"
        },
        "universeId": {
          "description": "Integer universe ID",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Thumbnails.Apis.Models.ThumbnailBatchRequest": {
      "properties": {
        "alias": {
          "description": "Alternative string used to identify a thumbnail\r\ninstead of targetId",
          "type": "string"
        },
        "format": {
          "description": "The thumbnail format",
          "type": "string"
        },
        "isCircular": {
          "description": "Is the thumbnail circular shape",
          "type": "boolean"
        },
        "requestId": {
          "description": "The request id. (Generated client side, used to represent the items in the request)",
          "type": "string"
        },
        "size": {
          "description": "The thumbnail size",
          "type": "string"
        },
        "targetId": {
          "description": "The thumbnail target id",
          "format": "int64",
          "type": "integer"
        },
        "token": {
          "description": "Alternative ase token used to identify a thumbnail",
          "type": "string"
        },
        "type": {
          "description": "The type of the thumbnails ['Avatar' = 1, 'AvatarHeadShot' = 2, 'GameIcon' = 3, 'BadgeIcon' = 4, 'GameThumbnail' = 5, 'GamePass' = 6, 'Asset' = 7, 'BundleThumbnail' = 8, 'Outfit' = 9, 'GroupIcon' = 10, 'DeveloperProduct' = 11, 'AvatarBust' = 12, 'AutoGeneratedAsset' = 13, 'PlaceIcon' = 14, 'AutoGeneratedGameIcon' = 15, 'ForceAutoGeneratedGameIcon' = 16, 'Look' = 17]",
          "enum": [
            "Avatar",
            "AvatarHeadShot",
            "GameIcon",
            "BadgeIcon",
            "GameThumbnail",
            "GamePass",
            "Asset",
            "BundleThumbnail",
            "Outfit",
            "GroupIcon",
            "DeveloperProduct",
            "AvatarBust",
            "AutoGeneratedAsset",
            "PlaceIcon",
            "AutoGeneratedGameIcon",
            "ForceAutoGeneratedGameIcon",
            "Look"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Roblox.Thumbs.FormatType": {
      "properties": {
        "Name": {
          "readOnly": true,
          "type": "string"
        },
        "Value": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Thumbs.ImageParameters": {
      "properties": {
        "FileExtension": {
          "readOnly": true,
          "type": "string"
        },
        "Format": {
          "$ref": "#/definitions/Roblox.Thumbs.FormatType"
        },
        "Height": {
          "format": "int32",
          "type": "integer"
        },
        "IsCircular": {
          "type": "boolean"
        },
        "MimeType": {
          "readOnly": true,
          "type": "string"
        },
        "Width": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Roblox.Web.Responses.Thumbnails.ThumbnailBatchResponse": {
      "properties": {
        "errorCode": {
          "format": "int32",
          "type": "integer"
        },
        "errorMessage": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "requestId": {
          "type": "string"
        },
        "state": {
          "description": " ['Error' = 0, 'Completed' = 1, 'InReview' = 2, 'Pending' = 3, 'Blocked' = 4, 'TemporarilyUnavailable' = 5]",
          "enum": [
            "Error",
            "Completed",
            "InReview",
            "Pending",
            "Blocked",
            "TemporarilyUnavailable"
          ],
          "type": "string"
        },
        "targetId": {
          "format": "int64",
          "type": "integer"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Roblox.Web.Responses.Thumbnails.ThumbnailResponse": {
      "properties": {
        "imageUrl": {
          "type": "string"
        },
        "state": {
          "description": " ['Error' = 0, 'Completed' = 1, 'InReview' = 2, 'Pending' = 3, 'Blocked' = 4, 'TemporarilyUnavailable' = 5]",
          "enum": [
            "Error",
            "Completed",
            "InReview",
            "Pending",
            "Blocked",
            "TemporarilyUnavailable"
          ],
          "type": "string"
        },
        "targetId": {
          "format": "int64",
          "type": "integer"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Thumbnails.Api.Models.UniverseThumbnailsResponse]": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/Roblox.Thumbnails.Api.Models.UniverseThumbnailsResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailBatchResponse]": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/Roblox.Web.Responses.Thumbnails.ThumbnailBatchResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/Roblox.Web.Responses.Thumbnails.ThumbnailResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Roblox.Web.WebAPI.Models.ApiErrorModel": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "field": {
          "type": "string"
        },
        "fieldData": {},
        "message": {
          "type": "string"
        },
        "userFacingMessage": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "host": "thumbnails.roblox.com",
  "info": {
    "title": "Thumbnails Api v1",
    "version": "v1"
  },
  "paths": {
    "/v1/asset-thumbnail-animated": {
      "get": {
        "parameters": [
          {
            "description": "The asset id.",
            "format": "int64",
            "in": "query",
            "name": "assetId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "(optional) placeid",
            "format": "int64",
            "in": "header",
            "name": "Roblox-Place-Id",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Assets:GetAssetThumbnailAnimated"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.Responses.Thumbnails.ThumbnailResponse"
            }
          },
          "400": {
            "description": "4: The requested Ids are invalid, of an invalid type or missing."
          }
        },
        "summary": "Thumbnails asset animated.",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/assets": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "The asset ids.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "assetIds",
            "required": true,
            "type": "array"
          },
          {
            "description": "(optional) placeid",
            "format": "int64",
            "in": "header",
            "name": "Roblox-Place-Id",
            "type": "integer"
          },
          {
            "default": "PlaceHolder",
            "description": "Optional policy to use in selecting thumbnail to return (default = PlaceHolder).",
            "enum": [
              "PlaceHolder",
              "ForcePlaceHolder",
              "AutoGenerated",
              "ForceAutoGenerated"
            ],
            "in": "query",
            "name": "returnPolicy",
            "type": "string"
          },
          {
            "default": "30x30",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "30x30",
              "42x42",
              "50x50",
              "60x62",
              "75x75",
              "110x110",
              "140x140",
              "150x150",
              "160x100",
              "160x600",
              "250x250",
              "256x144",
              "300x250",
              "304x166",
              "384x216",
              "396x216",
              "420x420",
              "480x270",
              "512x512",
              "576x324",
              "700x700",
              "728x90",
              "768x432",
              "1200x80"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Jpeg",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Assets:GetAssetThumbnails"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n8: The requested return policy is invalid (must be PlaceHolder, AutoGenerated or ForceAutoGenerated).\r\n10: Circular thumbnail requests are not allowed"
          },
          "403": {
            "description": "9: User not authorized to use AutoGenerated or ForceAutoGenerated return policies."
          }
        },
        "summary": "Thumbnails assets.",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/assets-thumbnail-3d": {
      "get": {
        "parameters": [
          {
            "description": "The asset id.",
            "format": "int64",
            "in": "query",
            "name": "assetId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "(optional) placeid",
            "format": "int64",
            "in": "header",
            "name": "Roblox-Place-Id",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Assets:GetAssetThumbnail3D"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.Responses.Thumbnails.ThumbnailResponse"
            }
          },
          "400": {
            "description": "4: The requested Ids are invalid, of an invalid type or missing."
          }
        },
        "summary": "Thumbnails assets.",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/badges/icons": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "The badge ids.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "badgeIds",
            "required": true,
            "type": "array"
          },
          {
            "default": "150x150",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "150x150"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Badges:GetBadgeThumbnails"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n10: Circular thumbnail requests are not allowed"
          }
        },
        "summary": "Thumbnails badge icons.",
        "tags": [
          "Badges"
        ]
      }
    },
    "/v1/batch": {
      "post": {
        "consumes": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "description": "(optional) placeid",
            "format": "int64",
            "in": "header",
            "name": "Roblox-Place-Id",
            "type": "integer"
          },
          {
            "description": "List of ThumbnailBatchRequest objects, may contain the following request types:\r\n            1. Avatar\r\n            2. AvatarHeadShot\r\n            3. GameIcon\r\n            4. BadgeIcon\r\n            5. GameThumbnail\r\n            6. GamePass\r\n            7. Asset\r\n            8. BundleThumbnail\r\n            9. Outfit\r\n            10. GroupIcon\r\n            11. DeveloperProduct\r\n            12. AutoGeneratedAsset\r\n            13. AvatarBust\r\n            14. PlaceIcon\r\n            15. AutoGeneratedGameIcon\r\n            16. ForceAutoGeneratedGameIcon\r\n            17. Look",
            "in": "body",
            "name": "requests",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/Roblox.Thumbnails.Apis.Models.ThumbnailBatchRequest"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Batch:GetBatchThumbnails"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailBatchResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n7: The specified type is not supported by the batch endpoint"
          },
          "403": {
            "description": "9: User not authorized to use AutoGenerated or ForceAutoGenerated return policies."
          }
        },
        "summary": "Returns a list of thumbnails with varying types and sizes",
        "tags": [
          "Batch"
        ]
      }
    },
    "/v1/bundles/thumbnails": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "CSV for the bundle ids to get bundle thumbnails",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "bundleIds",
            "required": true,
            "type": "array"
          },
          {
            "default": "150x150",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "150x150",
              "420x420"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Bundles:GetBundleThumbnails"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n10: Circular thumbnail requests are not allowed"
          }
        },
        "summary": "Get bundle thumbnails for the given CSV of bundle ids",
        "tags": [
          "Bundles"
        ]
      }
    },
    "/v1/developer-products/icons": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "The developer product ids.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "developerProductIds",
            "required": true,
            "type": "array"
          },
          {
            "default": "150x150",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "150x150",
              "420x420"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "DeveloperProducts:GetBadgeThumbnails"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n10: Circular thumbnail requests are not allowed"
          }
        },
        "summary": "Thumbnails developer product icons.",
        "tags": [
          "DeveloperProducts"
        ]
      }
    },
    "/v1/game-passes": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "The game pass ids.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "gamePassIds",
            "required": true,
            "type": "array"
          },
          {
            "default": "150x150",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "150x150"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "GamePasses:GetGamePassThumbnails"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n10: Circular thumbnail requests are not allowed"
          }
        },
        "summary": "Thumbnails game pass icons.",
        "tags": [
          "GamePasses"
        ]
      }
    },
    "/v1/games/icons": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "The universe ids.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "universeIds",
            "required": true,
            "type": "array"
          },
          {
            "default": "PlaceHolder",
            "description": "Optional policy to use in selecting game icon to return (default = PlaceHolder).",
            "enum": [
              "PlaceHolder",
              "ForcePlaceHolder",
              "AutoGenerated",
              "ForceAutoGenerated"
            ],
            "in": "query",
            "name": "returnPolicy",
            "type": "string"
          },
          {
            "default": "50x50",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "50x50",
              "128x128",
              "150x150",
              "256x256",
              "420x420",
              "512x512"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Jpeg",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Games:GetGameIcons"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n8: The requested return policy is invalid (must be PlaceHolder, AutoGenerated or ForceAutoGenerated).\r\n10: Circular thumbnail requests are not allowed"
          },
          "403": {
            "description": "9: User not authorized to use AutoGenerated or ForceAutoGenerated return policies."
          }
        },
        "summary": "Fetches game icon URLs for a list of universes' root places. Ids that do not correspond to a valid universe will be filtered out.",
        "tags": [
          "Games"
        ]
      }
    },
    "/v1/games/multiget/thumbnails": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "comma-delimited list of universe IDs",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "universeIds",
            "required": true,
            "type": "array"
          },
          {
            "default": 1,
            "description": "max number of thumbnails to return per universe",
            "format": "int32",
            "in": "query",
            "name": "countPerUniverse",
            "type": "integer"
          },
          {
            "default": true,
            "description": "true if defaults (if any) should be returned if no media exists",
            "in": "query",
            "name": "defaults",
            "type": "boolean"
          },
          {
            "default": "768x432",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "768x432",
              "576x324",
              "480x270",
              "384x216",
              "256x144"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Jpeg",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Games:MultiGetGameThumbnails"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Thumbnails.Api.Models.UniverseThumbnailsResponse]"
            }
          },
          "400": {
            "description": "0: Unknown error\r\n1: There are too many requested Ids.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n5: The requested universe does not exist.\r\n10: Circular thumbnail requests are not allowed"
          }
        },
        "summary": "Fetch game thumbnail URLs for a list of universe IDs.",
        "tags": [
          "Games"
        ]
      }
    },
    "/v1/games/{universeId}/thumbnails": {
      "get": {
        "parameters": [
          {
            "format": "int64",
            "in": "path",
            "name": "universeId",
            "required": true,
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "thumbnailIds",
            "required": true,
            "type": "array"
          },
          {
            "default": "768x432",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "768x432",
              "576x324",
              "480x270",
              "384x216",
              "256x144"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Jpeg",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Games:GetGameThumbnails"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n10: Circular thumbnail requests are not allowed"
          },
          "404": {
            "description": "5: The requested universe does not exist."
          }
        },
        "summary": "Fetches game thumbnail URLs for a list of universes' thumbnail ids. Ids that do not correspond to a valid thumbnail will be filtered out.",
        "tags": [
          "Games"
        ]
      }
    },
    "/v1/groups/icons": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "groupIds",
            "required": true,
            "type": "array"
          },
          {
            "default": "150x150",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "150x150",
              "420x420"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "GroupEmblem:GetGroupEmblemThumbnails"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n10: Circular thumbnail requests are not allowed"
          }
        },
        "summary": "Fetches thumbnail URLs for a list of groups. Ids that do not correspond to groups will be filtered out.",
        "tags": [
          "GroupEmblem"
        ]
      }
    },
    "/v1/places/gameicons": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "The place ids.",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "placeIds",
            "required": true,
            "type": "array"
          },
          {
            "default": "PlaceHolder",
            "description": "Optional policy to use in selecting game icon to return (default = PlaceHolder).",
            "enum": [
              "PlaceHolder",
              "ForcePlaceHolder",
              "AutoGenerated",
              "ForceAutoGenerated"
            ],
            "in": "query",
            "name": "returnPolicy",
            "type": "string"
          },
          {
            "default": "50x50",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "50x50",
              "128x128",
              "150x150",
              "256x256",
              "420x420",
              "512x512"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Jpeg",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Places:GetGameIcons"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n8: The requested return policy is invalid (must be PlaceHolder, AutoGenerated or ForceAutoGenerated).\r\n10: Circular thumbnail requests are not allowed"
          },
          "403": {
            "description": "9: User not authorized to use AutoGenerated or ForceAutoGenerated return policies."
          }
        },
        "summary": "Fetches game icon URLs for a list of places. Ids that do not correspond to a valid place will be filtered out.",
        "tags": [
          "Places"
        ]
      }
    },
    "/v1/users/avatar": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "CSV for the userIds to get avatar full body shots",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "userIds",
            "required": true,
            "type": "array"
          },
          {
            "default": "30x30",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "30x30",
              "48x48",
              "60x60",
              "75x75",
              "100x100",
              "110x110",
              "140x140",
              "150x150",
              "150x200",
              "180x180",
              "250x250",
              "352x352",
              "420x420",
              "720x720"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Jpeg",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:GetAvatarThumbnail"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n10: Circular thumbnail requests are not allowed"
          }
        },
        "summary": "Get Avatar Full body shots for the given CSV of userIds",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/users/avatar-3d": {
      "get": {
        "parameters": [
          {
            "description": "user Id for avatar",
            "format": "int64",
            "in": "query",
            "name": "userId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:GetAvatar3D"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.Responses.Thumbnails.ThumbnailResponse"
            }
          },
          "400": {
            "description": "4: The requested Ids are invalid, of an invalid type or missing."
          }
        },
        "summary": "Get Avatar 3d object for a user",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/users/avatar-bust": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "CSV for the userIds to get avatar headshots",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "userIds",
            "required": true,
            "type": "array"
          },
          {
            "default": "48x48",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "48x48",
              "50x50",
              "60x60",
              "75x75",
              "100x100",
              "150x150",
              "180x180",
              "352x352",
              "420x420"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:GetAvatarBust"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n10: Circular thumbnail requests are not allowed"
          }
        },
        "summary": "Get Avatar Busts for the given CSV of userIds",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/users/avatar-headshot": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "CSV for the userIds to get avatar headshots",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "userIds",
            "required": true,
            "type": "array"
          },
          {
            "default": "48x48",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "48x48",
              "50x50",
              "60x60",
              "75x75",
              "100x100",
              "110x110",
              "150x150",
              "180x180",
              "352x352",
              "420x420",
              "720x720"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Jpeg",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Avatar:GetAvatarHeadShot"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n10: Circular thumbnail requests are not allowed"
          }
        },
        "summary": "Get Avatar Headshots for the given CSV of userIds",
        "tags": [
          "Avatar"
        ]
      }
    },
    "/v1/users/outfit-3d": {
      "get": {
        "parameters": [
          {
            "description": "CSV for the userIds to get user outfits",
            "format": "int64",
            "in": "query",
            "name": "outfitId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Outfits:GetOutfit3D"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.Responses.Thumbnails.ThumbnailResponse"
            }
          }
        },
        "summary": "Get 3d object for an outfit",
        "tags": [
          "Outfits"
        ]
      }
    },
    "/v1/users/outfits": {
      "get": {
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "CSV for the userOutfitIds to get user outfits",
            "in": "query",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "name": "userOutfitIds",
            "required": true,
            "type": "array"
          },
          {
            "default": "150x150",
            "description": "The thumbnail size, formatted widthxheight",
            "enum": [
              "150x150",
              "420x420"
            ],
            "in": "query",
            "name": "size",
            "type": "string"
          },
          {
            "default": "Png",
            "description": "The thumbnail format",
            "enum": [
              "Png",
              "Webp"
            ],
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The circle thumbnail output parameter, true or false",
            "enum": [
              "true",
              "false"
            ],
            "in": "query",
            "name": "isCircular",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "properties": {
          "internal": false,
          "metricIds": [
            "Outfits:GetOutfits"
          ]
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Roblox.Web.WebAPI.Models.ApiArrayResponse[Roblox.Web.Responses.Thumbnails.ThumbnailResponse]"
            }
          },
          "400": {
            "description": "1: There are too many requested Ids.\r\n2: The requested image format is invalid. Please see documentation for valid thumbnail format parameter name and values.\r\n3: The requested size is invalid. Please see documentation for valid thumbnail size parameter name and format.\r\n4: The requested Ids are invalid, of an invalid type or missing.\r\n10: Circular thumbnail requests are not allowed"
          }
        },
        "summary": "Get outfits for the given CSV of userOutfitIds",
        "tags": [
          "Outfits"
        ]
      }
    }
  },
  "schemes": [
    "https"
  ],
  "swagger": "2.0"
}